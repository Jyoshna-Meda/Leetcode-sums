class Solution {
    public int findCircleNum(int[][] isConnected) {
        boolean[] visit=new boolean[isConnected.length];
        List<List<Integer>>  arr= new ArrayList<List<Integer>>();
        for(int i=0;i<isConnected.length;i++){
        arr.add(new ArrayList<Integer>());
        }
        for(int i=0;i<isConnected.length;i++){
            for(int j=0;j<isConnected[0].length;j++){
                if(isConnected[i][j]==1){
                    arr.get(i).add(j);
                    arr.get(j).add(i);
                }
            }
        }
        int count=0;
        for(int i=0;i<isConnected.length;i++){
            if(visit[i]==false){
                count++;
                dfs(visit,arr,i);
            }
            }
            return count;
        }
        public void dfs(boolean[] visit,List<List<Integer>>  arr,int i){
            visit[i]=true;
            for(int m:arr.get(i)){
                if(visit[m]==false)
                  dfs(visit,arr,m);
            }

        }

    
}
