/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode bstFromPreorder(int[] preorder) {
        int ub=Integer.MAX_VALUE;
        return bst(preorder,ub,new int[] {0});
    }
    public TreeNode bst(int[] pre,int ub,int[] curr){
        if(curr[0]==pre.length)
          return null;
          if(pre[curr[0]]>ub)
             return null;
         TreeNode node=new TreeNode(pre[curr[0]++]);
         node.left=bst(pre,node.val,curr);
         node.right=bst(pre,ub,curr);
         return node;
    }
}
