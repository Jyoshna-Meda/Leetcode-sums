/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> arr = new ArrayList<List<Integer>>();
       if(root==null)
           return arr;
     Queue<TreeNode> q=new LinkedList<>();
     q.add(root);
     boolean x=true;
     while(!q.isEmpty()){
         int size=q.size();
    List<Integer> lr=new ArrayList<>();
for(int i=0;i<size;i++){
    TreeNode node=q.poll();
    if(x==true)
       lr.add(node.val);
    else
       lr.add(0,node.val);
    if(node.left!=null){
        q.add(node.left);
    }
     if(node.right!=null){
        q.add(node.right);
    }
 }
         x=!x;
        arr.add(lr);

     }
     return arr;
    }
}
