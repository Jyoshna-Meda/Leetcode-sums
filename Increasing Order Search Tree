/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode increasingBST(TreeNode root) {
        List<Integer> ar = new ArrayList<>();
        TreeNode root1=root;
        traverse(root1,ar);
        TreeNode root2= new TreeNode(ar.get(0));
        TreeNode root3=root2;
        for(int i=1;i<ar.size();i++){
            root2.right= new TreeNode(ar.get(i));
            root2=root2.right;
        }
        return root3;
}
    public void traverse(TreeNode root1,List<Integer> ar){
        if(root1==null)
            return;
        traverse(root1.left,ar);
        ar.add(root1.val);
        traverse(root1.right,ar);
    }
}
